import numpy as np
import pandas as pd
import key_stitching_functinos as func
from key_stitching_functinos import build_samples_continues
import os
import matplotlib.pyplot as plt

error_dict = {
    "mixed": {"f": 0.05,
              "d": 0.05,
              "i": 0.05,
              },
    "onlyFips": {"f": 0.15,
                 "d": 0.0,
                 "i": 0.0,
                 },
    "onlydDels": {"f": 0.0,
                  "d": 0.15,
                  "i": 0.0,
                  },
    "onlydiIns": {"f": 0.0,
                  "d": 0.0,
                  "i": 0.15,
                  }

}

key = func.init_key(2048, -1)
key_length = len(key)
key = func.init_key(key_length, -1)
fragment_len = 40
samples_number = 200
window_size = 22

result_df = {"onlyFips":None, "onlydDels": None, "onlydiIns": None , "mixed": None}

for type in result_df.keys():
    error =  error_dict[type]
    result_df[type], result_dict = build_samples_continues(key=key, sample_begin=0, sample_end=samples_number,
                                                          sample_len=fragment_len, window_size=window_size,
                                                          flip_probability=error["f"], delete_probability=error["d"], insert_probability=error["i"],
                                                          result_dict={})
    result_df[type] = result_df[type].sort_values('count', ascending=False)
    TotalSum = result_df[type]['count'].sum()
    result_df[type]['count'] = result_df[type]['count']/ TotalSum


n_rows = result_df["onlyFips"].shape[0]

result_df["onlyFips"].plot(y="count", use_index=True)
print "done"

