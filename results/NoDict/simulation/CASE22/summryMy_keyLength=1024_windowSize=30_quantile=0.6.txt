
RESULT_NUMBER = 3
original key(len=1024):

candidate_key(len=43):
0000111001000100110110101101001101011101000
key.find(candidate_key) = -1
levenshtein_edit_dist(key, candidate_key) = 
({'I': 0, 'DIST': 981, 'D': 981, 'F': 0}, [1020, 1015, 1014, 1012, 1011, 1009, 1003, 1002, 1001, 999, 998, 997, 996, 995, 994, 991, 990, 989, 986, 984, 983, 982, 980, 979, 978, 977, 976, 972, 971, 970, 968, 967, 966, 965, 964, 961, 960, 958, 956, 955, 953, 949, 948])
SIMULATION = True
megic_num = 10
sample_len = 50
samples_num = megic_num * (key_length - sample_len) * (sample_len - window_size) = 194800
flip_probability = 0.22
insert_probability = 0.05
delete_probability = 0.05
result_df = 4066724
common_samples_df quantile = 0.6
common_samples_df = 8698
stitch_shift_size = 1
window_size = 30
allowCycle = False

RESULT_NUMBER = 4
original key(len=1024):

candidate_key(len=45):
001011100111101000010010011011101001001011000
key.find(candidate_key) = -1
levenshtein_edit_dist(key, candidate_key) = 
({'I': 0, 'DIST': 979, 'D': 979, 'F': 0}, [1020, 1015, 1014, 1012, 1009, 1008, 1003, 1001, 1000, 999, 998, 995, 991, 990, 989, 986, 985, 984, 983, 980, 978, 972, 970, 968, 967, 965, 964, 961, 959, 957, 956, 955, 954, 952, 951, 950, 949, 948, 947, 946, 945, 944, 943, 942, 937])
SIMULATION = True
megic_num = 30
sample_len = 50
samples_num = megic_num * (key_length - sample_len) * (sample_len - window_size) = 584400
flip_probability = 0.22
insert_probability = 0.05
delete_probability = 0.05
result_df = 12150424
common_samples_df quantile = 0.6
common_samples_df = 76777
stitch_shift_size = 1
window_size = 30
allowCycle = False

RESULT_NUMBER = 5
original key(len=1024):

candidate_key(len=45):
001011100111101000010010011011101001001011000
key.find(candidate_key) = -1
levenshtein_edit_dist(key, candidate_key) = 
({'I': 0, 'DIST': 979, 'D': 979, 'F': 0}, [1020, 1015, 1014, 1012, 1009, 1008, 1003, 1001, 1000, 999, 998, 995, 991, 990, 989, 986, 985, 984, 983, 980, 978, 972, 970, 968, 967, 965, 964, 961, 959, 957, 956, 955, 954, 952, 951, 950, 949, 948, 947, 946, 945, 944, 943, 942, 937])
SIMULATION = True
megic_num = 50
sample_len = 50
samples_num = megic_num * (key_length - sample_len) * (sample_len - window_size) = 974000
flip_probability = 0.22
insert_probability = 0.05
delete_probability = 0.05
result_df = 20163906
common_samples_df quantile = 0.6
common_samples_df = 212141
stitch_shift_size = 1
window_size = 30
allowCycle = False
